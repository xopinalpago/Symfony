<?php

namespace ContainerMdCpDrl;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getEx00registerCommandsService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.JxCcp1M.App\ex00\ex00::registerCommands()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.JxCcp1M.App\\ex00\\ex00::registerCommands()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'application' => ['privates', '.errored..service_locator.JxCcp1M.Symfony\\Component\\Console\\Application', NULL, 'Cannot autowire service ".service_locator.JxCcp1M": it references class "Symfony\\Component\\Console\\Application" but no such service exists. You should maybe alias this class to the existing "console.messenger.application" service.'],
        ], [
            'application' => 'Symfony\\Component\\Console\\Application',
        ]))->withContext('App\\ex00\\ex00::registerCommands()', $container);
    }
}
